package com.jhartz;

import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.script.ScriptException;


public class Field extends Frame implements Runnable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	Image ballImage;
	Image memoryImage;
	
	Thread thread;
	
	MainBall ball;
	
	int sleepTime = 50;
	
	Dimension screenSize;
	
	Graphics memoryGraphics;

	Field() {
		setTitle("Block Breaker");
		
		int taskBarSize = 60;
		screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		setSize(screenSize.width, screenSize.height - taskBarSize);
		setResizable(false);
		setVisible(true);	
		
		try {
			ballImage = ImageIO.read(new File("Images/Ball.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		this.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent windowEvent) {
				System.exit(0);
			}
		});
		
		memoryImage = createImage(getSize().width, getSize().height); 
		memoryGraphics = memoryImage.getGraphics(); 

		thread = new Thread(this);
		thread.start();
		
	}
	
	public static void main(String [] args){
		Field field = new Field();
	}
	
	public void update(Graphics g) {
		//g.fillRect(0, 0, screenSize.width, screenSize.height);
		g.dispose();
		ball.drawBall(memoryGraphics);
		g.drawImage(memoryImage, 0, 0, this);
	}

	@Override
	public void run() {
		int left = 0;
		int top = 0;
		int right = getWidth();
		int bottom = getHeight();
		
		Rectangle bounds = new Rectangle(left, top, right, bottom);
		ball = new MainBall(ballImage,bounds,this);
		
		while (true) {
			ball.move();
			try {
				Thread.sleep(sleepTime);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			repaint();
		}
	}
}
